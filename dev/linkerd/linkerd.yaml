---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRRTJEelRBMzdWallBTzZ0alhZNFpjakFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakE1TVRReE5UUXdNRFZhRncweU16QTVNVFF4TlRRd01EVmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBOFZGbXBlcGw0WHhLRENzdUlPUXVIcDZDTGYxckNKcVJYZGtrYXMya05UQ2JhNWw0Z1d4eQpmTm0rUnkyQW81cHYyKzZkTjVIWnYzbFNEWC9Mczh4QVE1VGpnOHlPYmZtSmU4NXc5K045YWliREc1N3Z3aXNnCnRQQytGcmhyTUZaSWUwWDZMdThzRkYycUJSTXNKdiswTW8xZDRYeU9iZmc1UC9FOUpnbFRZaDQraGxQZ0cvTjUKVGpqa2d1M2NSaGhleHRuQXFrUXBvczMvU1ROVG4xSk9Hc1k3UU1kR2VLWWYzandjaVYzVG5iZUZSZFY0VzZIQQpZVm1OWi90MkM3ZVBZT0VJVjFBNmRYRDRoZ0xDUzlEcHBUTzJSM2FWcHRLN3RYaU9XcXpjMUltaEpaUWo2MGRtCjBmZnlJZ0lzQkVMeldsODFYdFlNQ1B4Wm5rZzU0YzQxd1FJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQU0rbXNxdEFOUSttbU1NckJPT2pqa0hLbjZLMDN0aldXNXhnNWFra1ZIN1YKck1jLzAxdnBxbnhjamQrVVBrRGFwL3l2S21kcmhiNDl3bEdPNm5LWUkzTDFVOHZSbjBqY25lK2t5RjM4bHFMbQp4U01nNGk5dVhKbEFneS9sVTNhdlpqTDlFZ2h1NVJlOWt0QVJ6OS9lY0dTa2g5ekVWQkV0UGdtcm8vbUMwWUlRCm9kMC9VZVFoYXFrQkdwRGhSdDJKbjEvNklSWXlHNUJ0eWhhQnJoSzVPaVJNUUZ2ZTE3eHkxYUVRTldBOTdvczAKc1dpZndLOWFTcjRSeVNEcVhnSFhMbkF1ZGduV1Z1aXRwYnhyUjdYaTFOejFJamJaNXM2bjVucEY5K2dRRkVuMgptNGxOK1phK0p2TjhQRlJuby94QjdFc3dFYms5cThqSkhUNldwNFR5SDBnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOFZGbXBlcGw0WHhLRENzdUlPUXVIcDZDTGYxckNKcVJYZGtrYXMya05UQ2JhNWw0CmdXeHlmTm0rUnkyQW81cHYyKzZkTjVIWnYzbFNEWC9Mczh4QVE1VGpnOHlPYmZtSmU4NXc5K045YWliREc1N3YKd2lzZ3RQQytGcmhyTUZaSWUwWDZMdThzRkYycUJSTXNKdiswTW8xZDRYeU9iZmc1UC9FOUpnbFRZaDQraGxQZwpHL041VGpqa2d1M2NSaGhleHRuQXFrUXBvczMvU1ROVG4xSk9Hc1k3UU1kR2VLWWYzandjaVYzVG5iZUZSZFY0Clc2SEFZVm1OWi90MkM3ZVBZT0VJVjFBNmRYRDRoZ0xDUzlEcHBUTzJSM2FWcHRLN3RYaU9XcXpjMUltaEpaUWoKNjBkbTBmZnlJZ0lzQkVMeldsODFYdFlNQ1B4Wm5rZzU0YzQxd1FJREFRQUJBb0lCQVFEQW5oL1grVlBlK3MxRQpEMGRmbTZLd2NBY3EzR2VOMDRxS3BXTXJHUCtrTVNzdFpLL0tacHl2eVVIWElKdllldElrYzc3cjl6QWVaS0U1CkF6TytUUjlTa2twVURuZjFra1BLSGNzUUluWWR2OWptZUNPYUVjQ21qSzYrQmZBUkFoNFN2NVZsMXlTUkVQNC8KMU1EZVZDWXFYNnA2N0dmbm9VVlpJNTZTZU1ra3U4Q0lDVDJ3ZC83ZFY2NktOUTd1aHp4VUd3RjBZSndPU0dEbwpGdm9tU2Z6bURIY2I5L2JlczczVlVzS2toUVM4YWpYK0FBWjFiNWR3UzlwQVpuWitERHlwMWp4YXVRVUYxL3YwCjB1eXBvRmY0clpXSGtPUm5GeGU1UE9nY3dyd09vMlVkdE9mQkVwY1FzdHd2M3pLNWF2a25zSjQ0UGRCTXhkT0IKOTl4L0Z3bWRBb0dCQVBTZUh6VWlOU0VSV09adFNoT1VodHF3SnVQQnYxL2l6bUVCWGJSOHJDaisxVVVDVmNuRwo0d21CNktwMmFKRGFXQTE0dHZqbEdncEZiaW5qT0M5UDBmM2szYTUzaXN2YWNHUjBEaC9mRWFSYUxicDFicUhqCm9LLzEvNnQxOVVzNlFSdG1mZkN5ODNGNEpPRkFBK3BQb1lKTmw3RGdWVjNSVG1oV3dsVE8zeWpYQW9HQkFQeUwKK1NhVnRMS0ZvaWpxYWl4aDdQOGpESXlMa0wzVmgzV3Q1VGpQTlhxUnpVeklyYWhCZkQzeEF2b1Uxc1FuUVh5TQpGZEdsdWN1UzUvY2RWK1dhbzhjQXRFenFYbytBbUdGaXlzZStCZ004Z0MrWjRLQXVaRlhvTndpVHp2aktxOG9tCnpsVU9VVjB2c0d4WmNIcnBROWcvVHgyYVB0aXNYZWNqOHJpVzZFc25Bb0dBS2VpZE9DRXdNUVlqMFBhUVptSmYKNkQrZHFnK2JsZlhwbmJ6NkxOM2ZNUGJYMndiWFk4WnJSMG0yYnQzeWRENjBMenFyUG1FaDRQaWNNeGoybTBSMQptYVlJUk1lK1E4YWMwdGovUW42Wkt5czRBbVgwR2xCQlMyUTk5VVkwVERzaXhHciswS29ZQXl5dVJOa08wcW5wCjVjVWRZL1JMSzlPY04wd0Y1em02Q2VrQ2dZRUFrUDNqeTIxRDB3SzUrUGVzZ1ZLdmVFT3RIcnU2RytNTjVGZzAKTkF0eXpxNEt5anlreHViaDU4WUpTWDdSVnNpYTVtQ2Uza0JoalNrSW1HMTJXMUlQR1Yra0pFeWlnWXo0NzJDQwp2MjZ2a1FnWktEc1dKYUM4NWoxdDZ6VEJMVUZlbzY3bjR4bFhTVUxwN1Nya1V3eTljTmZZR2t6R0xDdTV0Y3lECnU4cVlEeDBDZ1lFQXpqNE1Yczc0dnF1bERuOXZWQzhmck5Na044UWx5SXhuV1R5VnFLR24xbEgvSjRHWDZMNzQKTEZsbzJoeFhPU1o0MlBRWUxMc3VUdWlURDhtblhRY0kzRmJDaS9tTmVXTDQrNEtaRWhaelVwZVhpYWppQUZCVApWSThZemVTT2dFcEI2UTgvUGlpMEFpUktDcWVDamg2cnB4dUo5SzFCK0RRazM4RUpXaVFDWTRRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRRTJEelRBMzdWallBTzZ0alhZNFpjakFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakE1TVRReE5UUXdNRFZhRncweU16QTVNVFF4TlRRd01EVmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBOFZGbXBlcGw0WHhLRENzdUlPUXVIcDZDTGYxckNKcVJYZGtrYXMya05UQ2JhNWw0Z1d4eQpmTm0rUnkyQW81cHYyKzZkTjVIWnYzbFNEWC9Mczh4QVE1VGpnOHlPYmZtSmU4NXc5K045YWliREc1N3Z3aXNnCnRQQytGcmhyTUZaSWUwWDZMdThzRkYycUJSTXNKdiswTW8xZDRYeU9iZmc1UC9FOUpnbFRZaDQraGxQZ0cvTjUKVGpqa2d1M2NSaGhleHRuQXFrUXBvczMvU1ROVG4xSk9Hc1k3UU1kR2VLWWYzandjaVYzVG5iZUZSZFY0VzZIQQpZVm1OWi90MkM3ZVBZT0VJVjFBNmRYRDRoZ0xDUzlEcHBUTzJSM2FWcHRLN3RYaU9XcXpjMUltaEpaUWo2MGRtCjBmZnlJZ0lzQkVMeldsODFYdFlNQ1B4Wm5rZzU0YzQxd1FJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQU0rbXNxdEFOUSttbU1NckJPT2pqa0hLbjZLMDN0aldXNXhnNWFra1ZIN1YKck1jLzAxdnBxbnhjamQrVVBrRGFwL3l2S21kcmhiNDl3bEdPNm5LWUkzTDFVOHZSbjBqY25lK2t5RjM4bHFMbQp4U01nNGk5dVhKbEFneS9sVTNhdlpqTDlFZ2h1NVJlOWt0QVJ6OS9lY0dTa2g5ekVWQkV0UGdtcm8vbUMwWUlRCm9kMC9VZVFoYXFrQkdwRGhSdDJKbjEvNklSWXlHNUJ0eWhhQnJoSzVPaVJNUUZ2ZTE3eHkxYUVRTldBOTdvczAKc1dpZndLOWFTcjRSeVNEcVhnSFhMbkF1ZGduV1Z1aXRwYnhyUjdYaTFOejFJamJaNXM2bjVucEY5K2dRRkVuMgptNGxOK1phK0p2TjhQRlJuby94QjdFc3dFYms5cThqSkhUNldwNFR5SDBnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWWczUjUwVkxFZHEydS9nRjBNbW5GakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJd09URTBNVFUwTURBMldoY05Nak13T1RFME1UVTBNREEyV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNodFdOWmpiL0FiNTV3TjBIZ0FkMEdNbTYydkQyWW1BbVVSUXh1VkIzbgpjUVBkcG9yNis5MVMybnptSVAxRjVHUlNHUE1VTU5CRHBTdld2TUlvL0tqQzVldFhPVTl2bC94V0YvdHJyN01NCnNPS0VjVzRhbElGVGNXMlhHa0hCSTNjZ01VS2l1MkdudXIvMXJ4eTVrbm0rTVdpRVpwOEt2M1hWMkg5RGc3WncKdWJhbnJyd1kwQmsrK3hzeUtTdFRsMnJyaVBKVUo5YzhNTTk2VnVhRytGbXltS2M1ZHNqdGdMUm5lSUZQSUg5SApsVDJKLzJlUXZyL3U0WlV1MmN5ZTJoS2VWZEZnZWFoQkFiSFl1OThMcklYaklZYTVKODV3eFAxMmJaZ3UyanhRClRRa0hhUzFGOVhPbWxjYXYyMmZNRUs4NWU4YnB2UWFDUEllc2FiektyMFU1QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGVDQyd0tnb0lDakZxUG9TMnpEckhqaWdpb2oKdFlIbHEwcXJkc1ViVWF3VVFMVVE4ZjYzTCs4M3RJb3N3VzlNV2twQXJ6YU9lTEhDQW5hZnVDQ1lCa3ozMEp1aApoRnczVmMyc2gvdndBS1pxS2xwQnFXSjQxWVlBblFlak1DM1FnRCt6bGt4ak1MN3FPdmpKOGhQV3NhRisySWU1CmR6N3BUZVlydkRJV0JKVllDTnJ3Z0tjOVE5MUcxMW9tY2xBSXN4UHliL0d3WW9xTXBENUkzRlJGamNaTFNyZysKaXRpYTB1bVRraUh2c2VOUXpGMjR2UDVvQ1dNbXIzYVROV2ZRUXJYRGQ5UnlRelZjam1pKzNNMG5xUmVnSTNjVApsMC9PSFhkQnZzTDkrZzg2UW5JNmhTMHdzS052L3JoL3ZsSkc1MklZaXFYVUVObVdpTnplWmE0MVRxOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2JWaldZMi93RytlY0RkQjRBSGRCakp1dHJ3OW1KZ0psRVVNYmxRZDUzRUQzYWFLCit2dmRVdHA4NWlEOVJlUmtVaGp6RkREUVE2VXIxcnpDS1B5b3d1WHJWemxQYjVmOFZoZjdhNit6RExEaWhIRnUKR3BTQlUzRnRseHBCd1NOM0lERkNvcnRocDdxLzlhOGN1Wko1dmpGb2hHYWZDcjkxMWRoL1E0TzJjTG0ycDY2OApHTkFaUHZzYk1pa3JVNWRxNjRqeVZDZlhQRERQZWxibWh2aFpzcGluT1hiSTdZQzBaM2lCVHlCL1I1VTlpZjluCmtMNi83dUdWTHRuTW50b1NubFhSWUhtb1FRR3gyTHZmQzZ5RjR5R0d1U2ZPY01UOWRtMllMdG84VUUwSkIya3QKUmZWenBwWEdyOXRuekJDdk9Ydkc2YjBHZ2p5SHJHbTh5cTlGT1FJREFRQUJBb0lCQVFDSHJCREx6UUxKYUp5cwpsNS9jV3BQZkpDY0JoOVBDR0NWSlVkbEpJNmZuUzBtc0NKUG9XYkpxVmtlZUtLVjJvMVdNRDhTNTl1NTFJcm95Ck16SlBneFB3V1VqbmFIeitLcTBhYW9xVjRkYStXaFhpZXV5ZXZtUDI1MTdEL05LWVFiSXJ2MGlpRWNhd0hCMzcKK2t5R1laOWs5RDAxZ0lnRlUzZUEwR0NOKzQ3dzZYb3MwdG5lNXlqMmFuc1ZpQS9QTDVWVjJidmFFKysrdmloKwpYT1dqSlFNNmJRekFvZW9SZFI3Qml1OHY5YWZlaFUwcmtIUVNPRzRIK0tZRFdVMVBhQnFib2sxZk1UUWhEWnlvCjFXY2k2MmpvYnREVWd3ODBsYU5xT2xpR1BJSGFLUENBNWFsb2lrT25qeVkxYTl6aFVRMkdPYkhJNUpFaWFJSUcKYVV1YVlnQVZBb0dCQU13Vy8yTUM5dkZKM3ZiWW9EYTEzNjdtTnMrMjYxTkVQQjlSZkVoVENYVVN5bWh5ZW80cwpZS0c1QVhRUllJeXlGR0JzeVBJbE8zR2pFRHo2dDFPWnNxSElobGVIVFIzTExXODBmV2JzZmdTS09UZ2l2VUxKCm9DQ01xMS9XUENFUlFsWFNRS1NqOUozd05nRVpQYllSdERJcENIVlJ3cE9xUFhncTY2VmRhRVduQW9HQkFNclcKeS9mOVRYdDA4bjVQTVpqTllLR0x1WDdsNHYrOFVMV08wdVlOSENhSHFNZHZybFJ0OHNIR09hRDVza3dybllraQpGWjkycUJjYjRncFZ6S1QxV3Q1cm0yanpPSGpqVmNxRS9BM2RnM1RCQ1RvZWU1L1daK2xOaUs0V3lmUlpOVnppCmkzYTJMdDdnT0xPSSs4SkpzZzNJeVlIVFBzWEhJNmh0TEU2eFlUb2ZBb0dBTkM0ZEZiK0lTNkRMZE9sbDdSY0wKSGJpV2d2ME5wYmhvZHNscXNVTXB3OWtPRHk1VnowdmhXUGZvT3pqR0tyTE5LdW9sWm1QR2t3TlIvNFZLb2dGRgovcjg2T2Q3S0JMZ1I0Y0RWM3g3UUNYRWR1QkNKdXkyNTF4aWdLRnlwK3ZwaXIzYVdPSUlDNU82cG9CWklCT2o1CjNXbElWRmFYSFJJRnJWZXI4QmUxdFRrQ2dZQnJUZ0tOYUpWSzBHMVFZTGpPS3lnSmpnOU5rSFByOGtXSUpzeHYKSTFSWEZjRTE4R0Q3RFVjMU41WlpFSDlBU0hxSWgxMkZCSktiMXdaWGpWZzdsQWpFVFl6amtuZTNqQnhnak1XQwoyRUtveTA0RVR3ZjdZTU9MNnBaNThsaFlTYkV2T0RHclZXbXFRbGY4c21UdFBXdFNXM3d1a0FCUFJMQWFjOWJTCnNvZks1UUtCZ0NYbU8rM3luaTd3SUZDTFBlVitENytrVzMrRXJFOGJnV0hhSHMxWVRYbkJwSTV2b3RudlVXT24KczMxMWVjcEUvMjZhZjZxLy9iMks3SnRPWXpPMEdVakl3bVZtN0ZkMis1R29YdVJYTVhkUjZnUkRNZFZpZ2hWNgpreUZXY1JYdm5zL2N1UXRiR2dNbkx2Y0NPR0p4YzlZdXZ4Wk4rcXN1NFpTV0NpU1E0MTh2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWWczUjUwVkxFZHEydS9nRjBNbW5GakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJd09URTBNVFUwTURBMldoY05Nak13T1RFME1UVTBNREEyV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNodFdOWmpiL0FiNTV3TjBIZ0FkMEdNbTYydkQyWW1BbVVSUXh1VkIzbgpjUVBkcG9yNis5MVMybnptSVAxRjVHUlNHUE1VTU5CRHBTdld2TUlvL0tqQzVldFhPVTl2bC94V0YvdHJyN01NCnNPS0VjVzRhbElGVGNXMlhHa0hCSTNjZ01VS2l1MkdudXIvMXJ4eTVrbm0rTVdpRVpwOEt2M1hWMkg5RGc3WncKdWJhbnJyd1kwQmsrK3hzeUtTdFRsMnJyaVBKVUo5YzhNTTk2VnVhRytGbXltS2M1ZHNqdGdMUm5lSUZQSUg5SApsVDJKLzJlUXZyL3U0WlV1MmN5ZTJoS2VWZEZnZWFoQkFiSFl1OThMcklYaklZYTVKODV3eFAxMmJaZ3UyanhRClRRa0hhUzFGOVhPbWxjYXYyMmZNRUs4NWU4YnB2UWFDUEllc2FiektyMFU1QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGVDQyd0tnb0lDakZxUG9TMnpEckhqaWdpb2oKdFlIbHEwcXJkc1ViVWF3VVFMVVE4ZjYzTCs4M3RJb3N3VzlNV2twQXJ6YU9lTEhDQW5hZnVDQ1lCa3ozMEp1aApoRnczVmMyc2gvdndBS1pxS2xwQnFXSjQxWVlBblFlak1DM1FnRCt6bGt4ak1MN3FPdmpKOGhQV3NhRisySWU1CmR6N3BUZVlydkRJV0JKVllDTnJ3Z0tjOVE5MUcxMW9tY2xBSXN4UHliL0d3WW9xTXBENUkzRlJGamNaTFNyZysKaXRpYTB1bVRraUh2c2VOUXpGMjR2UDVvQ1dNbXIzYVROV2ZRUXJYRGQ5UnlRelZjam1pKzNNMG5xUmVnSTNjVApsMC9PSFhkQnZzTDkrZzg2UW5JNmhTMHdzS052L3JoL3ZsSkc1MklZaXFYVUVObVdpTnplWmE0MVRxOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRY0JLbHA2U09RQ2RmTmtiRWpNYWJvVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TURreE5ERTFOREF3TlZvWERUSXpNRGt4TkRFMU5EQXdOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFQRmdISHZwcFBHbzUxcnpld1lCVW51TnBCMnRPblFaeCtWQVhVZTFEN01sdTltaQo3ODBYVDJuSmEyeEovZjhNcVVFSUNMbUs1MmNmamN1dTdhOXU1VVNFRk1NSkwycTFLdmhhU1FFUExkVkpTSzRTCmYzR2hwRVYyRWpLcDJibG1kanRqcTNVZk9xdm9mSGs5TncvS2dzdVR0UWU5MU9pVFB2UHlveW1tTTFhaHI5cXUKYlNvcXAyQ2p4WWlqcHBHSW1ZbTRPdytrTGFCVlZZZ0tpSlJvWVVabCs4Rk9KOER1SUJ2Y2V5R05zWlg4c2c1ago0TjZyUlFvM0RvSHIwSk9Xcmphd2J2MEEzaktIMEd5VytJS0hudk12akV1cjBVbmZQWWZVbGJsVUp2bm9EcDlRCmhMK00vVFB6Nnl3YUV6Y1hhSzJ0L0N0UzY0Szc0ei9lcyt0YXFWVUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTWxxQ3JrdTJUR2czYkZoWm16a0lobVJKUURCSzJsdXBnK3YKZXYyNDhRTVhTWDhYNjRVb2tlQ3kwV0NCNHFYU0xDR0xYbHJtZ3JaV1UydjVzVEpGUW1IVzN4bGNOL0EwT0VsTQo4Nk0vNG40NFJ6aC9qOEpkSjFzZnJxM2hoeFZWbFRvZGY1VXhZTkRzRmoxU29YT1h0cVhIRm1zM3VIQlNwcmtMCkd2bm5rT1lia3dmeFZiUmdUOE1HVThndDh6cGRLUjBBZC9PeDlIQTR1cGhnSVR0d01RZXBBWGs1ak1FOVZHOHIKeGxiSUlKdU0zUzlkcUR2RTdpYnNOOHBPalhwS0Irc2M0Y2xOalVSSElOTFhZZlNzVHNXaUFReGdCOHBYK2Z3TQpoRkEyLzFOcVl0b1RaKzVVZytsN3lFT0RtY2d5RU9pNHIxUWR3ZDVKT0Fuek5LUXhaMFE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOFdBY2UrbWs4YWpuV3ZON0JnRlNlNDJrSGEwNmRCbkg1VUJkUjdVUHN5VzcyYUx2CnpSZFBhY2xyYkVuOS93eXBRUWdJdVlyblp4K055Njd0cjI3bFJJUVV3d2t2YXJVcStGcEpBUTh0MVVsSXJoSi8KY2FHa1JYWVNNcW5adVdaMk8yT3JkUjg2cStoOGVUMDNEOHFDeTVPMUI3M1U2Sk0rOC9LakthWXpWcUd2MnE1dApLaXFuWUtQRmlLT21rWWlaaWJnN0Q2UXRvRlZWaUFxSWxHaGhSbVg3d1U0bndPNGdHOXg3SVkyeGxmeXlEbVBnCjNxdEZDamNPZ2V2UWs1YXVOckJ1L1FEZU1vZlFiSmI0Z29lZTh5K01TNnZSU2Q4OWg5U1Z1VlFtK2VnT24xQ0UKdjR6OU0vUHJMQm9UTnhkb3JhMzhLMUxyZ3J2alA5Nno2MXFwVlFJREFRQUJBb0lCQVFDUUIydTN2T2xCa2luTApLYkpsR1BEZzdObmJJM3pYdm5KN0ozY0J6TmE3Ylc2MEpQZTJoNHhKY1hqNk93U201aVV3dXR5SjZvcStEQ1FPClFDbHdIMW9MRWsxWk8rZmhZbzFyZUdSTGo0VW4yZnpXY2c4OS9OZ0s0ck5sSzlqUk9vU2VWNUQ5NkU2WU9iZmMKbUZ4OHZiaGlSWmNtTVc0VUFaajA4L25NWm5JSDVIWlRlNmVDVStvS0VOU1IyUmd1NmNXSWRPY1lMWEFBVElhVgpBMUk1TkRkN0Z0ZkVZQk5jeTRwME1qWmRMNzYxVzBKM1pFMkMrSUYzUG5SZ08ySCt3Z3lta09zUnh0Zm1neEZ3CjkydDZuWHRaNW5qaHlyZXVVSHJYMTRGTW52THV0U2hqOU5QZVRBUkU3dldSczlWdXA1TjJKRlptZUhDcG5hR3MKOW01RXNOOEJBb0dCQVAyOWVqSjhHUU9vSS9GK0diQjQ3ZWtObUZObjlYR2JFRWRmdVpaMnhEaCtlb0NJeEFYcQo1Yko1RTNrcy9xWDFwMnp2OEt1WUYyRC9wWmVuNzNZTmM2OFlzMWhKTFpoWUlJTzk2L2JQc3FZanJkdXZvRDlZCnBvckNpSFlpS2FnQXBmSGlJUWpXVXh0WHRHSjRjV0d5dnVuSUVHRWhJaEgvQnpPSmV0TGlBeWgxQW9HQkFQT0cKY1ZBWmYyUi9IeXlseDhJZVRNSmEwOFkxbW1NcHBwT1RCWXprcjNyYzlTTlpLdHZnWWg0Yzcxb3RaS09jZjBXMApMMjlPazhISzZaU0FkY0tPbUNDREs5VHJxbmNjbnFFWEZzN3dNTlI0TVcxUHp6cktnV3VWZ2N1eE1VZm9pZE9SCjlYSVNOTzMyL1FVclE1SmFkSzd2ZzlYMjR3VU1ET2k2R0R3a0JHRmhBb0dBS3BhN0ErNUFaSlM4TTdSdXEyZ2cKeHBVNWxBWkc5Q0tLd1BBWVBtRUEzbHFjUlNhdmdDN0ZEd2V6ZFF0UVVwckExMUFPblQ2UjdmMzYxVkdpcDdYcQpUT0ZnZU5rUGhocUVtcGd1R3VjUm5VRXYxVWZOSmRURFgxYjNnSnlMVVYrS2V1YnhsSUlrd05vZnRNZHlnR3Q0CkQ5VThxcERkSHhnbkpVZFdEajlST0dFQ2dZRUFuZ015S3lNZ1Fma3FKVEk4ZDN4cG1nS05QeU13MWY4RWt1VG0KeVJEcHUvTDdMTUNDeXNEQmFZQ2szZ0p1TnFzbytmVjhnZUNlaHpRK2M1a1d6L0x1U3NwUitvb2Z4Y0hRTy81YgpVbE1QbkEyUkpMaVFZamxiMkk3ZDlXazM3TXk2QVluSGxRaXpSMlRuc0I3dWJWdzhNZlkvdU9uRlRGVVJXMERFCjBPRWQ1b0VDZ1lFQXVlakI0aENEQXhiNjM5T296TTdjVm9tdURCaWFrcmYrekhBOEJ0VGNwWWtsNWJESU53RmQKQXhPM1VFUVVqYUxaNWhhRUNUc2Exc04rd0FSck9vdUFmbkxGTkJLVmx5TFNOMjVmWTdVYnpMdUt4Y25jaU5SSwpIUnVKYTJlZ1VEMklZZHZGT2hpb3ZIbVhwU0ZOWE1yRkNiVkNTSkJmZTdvODdKQk5Wb21aNndZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRY0JLbHA2U09RQ2RmTmtiRWpNYWJvVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TURreE5ERTFOREF3TlZvWERUSXpNRGt4TkRFMU5EQXdOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFQRmdISHZwcFBHbzUxcnpld1lCVW51TnBCMnRPblFaeCtWQVhVZTFEN01sdTltaQo3ODBYVDJuSmEyeEovZjhNcVVFSUNMbUs1MmNmamN1dTdhOXU1VVNFRk1NSkwycTFLdmhhU1FFUExkVkpTSzRTCmYzR2hwRVYyRWpLcDJibG1kanRqcTNVZk9xdm9mSGs5TncvS2dzdVR0UWU5MU9pVFB2UHlveW1tTTFhaHI5cXUKYlNvcXAyQ2p4WWlqcHBHSW1ZbTRPdytrTGFCVlZZZ0tpSlJvWVVabCs4Rk9KOER1SUJ2Y2V5R05zWlg4c2c1ago0TjZyUlFvM0RvSHIwSk9Xcmphd2J2MEEzaktIMEd5VytJS0hudk12akV1cjBVbmZQWWZVbGJsVUp2bm9EcDlRCmhMK00vVFB6Nnl3YUV6Y1hhSzJ0L0N0UzY0Szc0ei9lcyt0YXFWVUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTWxxQ3JrdTJUR2czYkZoWm16a0lobVJKUURCSzJsdXBnK3YKZXYyNDhRTVhTWDhYNjRVb2tlQ3kwV0NCNHFYU0xDR0xYbHJtZ3JaV1UydjVzVEpGUW1IVzN4bGNOL0EwT0VsTQo4Nk0vNG40NFJ6aC9qOEpkSjFzZnJxM2hoeFZWbFRvZGY1VXhZTkRzRmoxU29YT1h0cVhIRm1zM3VIQlNwcmtMCkd2bm5rT1lia3dmeFZiUmdUOE1HVThndDh6cGRLUjBBZC9PeDlIQTR1cGhnSVR0d01RZXBBWGs1ak1FOVZHOHIKeGxiSUlKdU0zUzlkcUR2RTdpYnNOOHBPalhwS0Irc2M0Y2xOalVSSElOTFhZZlNzVHNXaUFReGdCOHBYK2Z3TQpoRkEyLzFOcVl0b1RaKzVVZytsN3lFT0RtY2d5RU9pNHIxUWR3ZDVKT0Fuek5LUXhaMFE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.0
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.0
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA5MTQxNTM5NTVaFw0yMzA5MTQxNTQwMTVaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEaySRYJ1YTFY14AaqdO9oePrxchvFayIwp0oyXi+F5jnvHh25KRTlF8FIUrdC
            ituJV9wUfyU39leuHx5zG0wECqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSXD90+YjJ3Tqq+dHs/5YF3pBfEEDAKBggqhkjOPQQDAgNJADBGAiEAxi4kZycP
            9fKnnSvmpmn8s37DFxqBedRmS5/c0oAtL9ACIQCsVzB2H9KvGuOmR+Gcw2BUNXFS
            zFBILy/+Dro9auau8Q==
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjA5MTQxNTM5NTVaFw0yMzA5MTQxNTQwMTVaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEaySRYJ1YTFY14AaqdO9oePrxchvFayIwp0oyXi+F5jnvHh25KRTlF8FIUrdC
      ituJV9wUfyU39leuHx5zG0wECqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSXD90+YjJ3Tqq+dHs/5YF3pBfEEDAKBggqhkjOPQQDAgNJADBGAiEAxi4kZycP
      9fKnnSvmpmn8s37DFxqBedRmS5/c0oAtL9ACIQCsVzB2H9KvGuOmR+Gcw2BUNXFS
      zFBILy/+Dro9auau8Q==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.0
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.12.0
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: true
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TVRReE5UTTVOVFZhRncweU16QTVNVFF4TlRRd01UVmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVheVNSWUoxWVRGWTE0QWFxZE85b2VQcnhjaHZGYXlJd3Awb3lYaStGNWpudkhoMjVLUlRsRjhGSVVyZEMKaXR1SlY5d1VmeVUzOWxldUh4NXpHMHdFQ3FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU1hEOTArWWpKM1RxcStkSHMvNVlGM3BCZkVFREFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBeGk0a1p5Y1AKOWZLbm5Tdm1wbW44czM3REZ4cUJlZFJtUzUvYzBvQXRMOUFDSVFDc1Z6QjJIOUt2R3VPbVIrR2N3MkJVTlhGUwp6RkJJTHkvK0RybzlhdWF1OFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFDS1REby8yMjRxOVkyWUxIbUZsY0NLQUp0bmdGcXVvZUQ3dkN5OHBPU0NvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFYXlTUllKMVlURlkxNEFhcWRPOW9lUHJ4Y2h2RmF5SXdwMG95WGkrRjVqbnZIaDI1S1JUbApGOEZJVXJkQ2l0dUpWOXdVZnlVMzlsZXVIeDV6RzB3RUNnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjA5MTQxNTM5NTVaFw0yMzA5MTQxNTQwMTVaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEaySRYJ1YTFY14AaqdO9oePrxchvFayIwp0oyXi+F5jnvHh25KRTlF8FIUrdC
    ituJV9wUfyU39leuHx5zG0wECqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSXD90+YjJ3Tqq+dHs/5YF3pBfEEDAKBggqhkjOPQQDAgNJADBGAiEAxi4kZycP
    9fKnnSvmpmn8s37DFxqBedRmS5/c0oAtL9ACIQCsVzB2H9KvGuOmR+Gcw2BUNXFS
    zFBILy/+Dro9auau8Q==
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 31eda8000db7be25f47793fc216998a6192f27fd0a5f6cd80b907617520709ff
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 31eda8000db7be25f47793fc216998a6192f27fd0a5f6cd80b907617520709ff
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  concurrencyPolicy: Replace
  schedule: "50 15 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.0
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.0
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 31eda8000db7be25f47793fc216998a6192f27fd0a5f6cd80b907617520709ff
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TVRReE5UTTVOVFZhRncweU16QTVNVFF4TlRRd01UVmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFYXlTUllKMVlURlkxNEFhcWRPOW9lUHJ4Y2h2RmF5SXdwMG95WGkrRjVqbnZIaDI1S1JUbEY4RklVcmRDCiAgICAgICAgaXR1SlY5d1VmeVUzOWxldUh4NXpHMHdFQ3FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlNYRDkwK1lqSjNUcXErZEhzLzVZRjNwQmZFRURBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQXhpNGtaeWNQCiAgICAgICAgOWZLbm5Tdm1wbW44czM3REZ4cUJlZFJtUzUvYzBvQXRMOUFDSVFDc1Z6QjJIOUt2R3VPbVIrR2N3MkJVTlhGUwogICAgICAgIHpGQklMeS8rRHJvOWF1YXU4UT09CiAgICAgICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgICBrZXlQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIEVDIFBSSVZBVEUgS0VZLS0tLS0KICAgICAgICBNSGNDQVFFRUlBQ0tURG8vMjI0cTlZMllMSG1GbGNDS0FKdG5nRnF1b2VEN3ZDeThwT1NDb0FvR0NDcUdTTTQ5CiAgICAgICAgQXdFSG9VUURRZ0FFYXlTUllKMVlURlkxNEFhcWRPOW9lUHJ4Y2h2RmF5SXdwMG95WGkrRjVqbnZIaDI1S1JUbAogICAgICAgIEY4RklVcmRDaXR1SlY5d1VmeVUzOWxldUh4NXpHMHdFQ2c9PQogICAgICAgIC0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0KaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TVRReE5UTTVOVFZhRncweU16QTVNVFF4TlRRd01UVmFNQnd4R2pBWQogIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICBRZ0FFYXlTUllKMVlURlkxNEFhcWRPOW9lUHJ4Y2h2RmF5SXdwMG95WGkrRjVqbnZIaDI1S1JUbEY4RklVcmRDCiAgaXR1SlY5d1VmeVUzOWxldUh4NXpHMHdFQ3FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICBCQlNYRDkwK1lqSjNUcXErZEhzLzVZRjNwQmZFRURBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQXhpNGtaeWNQCiAgOWZLbm5Tdm1wbW44czM3REZ4cUJlZFJtUzUvYzBvQXRMOUFDSVFDc1Z6QjJIOUt2R3VPbVIrR2N3MkJVTlhGUwogIHpGQklMeS8rRHJvOWF1YXU4UT09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpwcm94eUluaXQ6CiAgcnVuQXNSb290OiB0cnVlCg==
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
